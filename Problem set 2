# exo 1 #
v1=(int(input("Your x1:")),int(input("Your y1:"))) 
v2=(int(input("Your x2:")),int(input("Your y2:"))) 
v3=(int(input("Your x3:")),int(input("Your y3:"))) 
def area (v1,v2,v3):
    area_t= 0.5*(v2[0]*v3[1]-v3[0]*v2[1]-v1[0]*v3[1]+v3[0]*v1[1]+v1[0]*v2[1]-v2[0]*v1[1]) 
    return area_t 
print("Your area is:",area(v1,v2,v3))



# exo 2# 
import math
m=0
s=1
x=list(range(-5,5))
def gauss(x,m,s):
        res=(1/(math.sqrt(2*math.pi*s)))*math.exp(-0.5*((x-m)/s)**2)
        return res 
for i in x:
    print("The result of the gaussian function with X =",i, "is",gauss(i,m,s))

numbers = list(range(10))
print("Your list is:",numbers)



#exo 3 ####
for n in numbers:
    i = len(numbers) // 2
    del numbers[i]
    print('n=%d, del %d' % (n, i), numbers)
print(numbers)

# the codes does: for n in list: at each iteration the code remove the element i in the middle of the list
# and print the modified list#





# ex 4 ###

filename = input("Please enter the name of the file that you want to plot:")
# We have to create file so that we add the path "dat/" in order to use the open function correctly afterwards
file = "../dat/" + filename  # we specify the file we want by giving the path + filename (given above (put .dat))
text = open(file, 'r')  #our file is open and called text
table = [] # Empty table is created

for line in text: #for each line in the data
    
    column = line.split() # we store each line (a string) in substring stored like [x,y]
    
    if len(column) == 0 : # we ask the program to not take any actions if there is a blank line, does nothing with these lines
        
        continue
    
    elif column[0]  == "#" : # Again we ask the program to ingore comments, does nothing with these lines
        
        continue
        #for each line (we are still in for loop), at each time we store an element in column (with index 0,1), 
        # we take out of column element 0 and store it in temp and element 1 in density then we add to our empty
        # table the the information [temperature, density]
    temperature = float(column[0]) # Don't forget to put float as we python will read it as a string no plot will be generared
    density = float(column[1])
    
    table.append([temperature,density])

text.close()
    
print (table)
print (type(table))

    
    table.append([temperature,density])
text.close() # once this is done, we close the file    
print (table)
print (type(table))

# Now let's make the plot

import matplotlib.pyplot as plt # import the matplot library 
temp = [i[0] for i in table] # Here we ask the program 
#to abstruct only the values of the table assigned in the first column and put them on a list named temp
dens = [i[1] for i in table] # Same logic
print (temp)
print (dens)
plt.scatter(temp,dens, c = "Blue" )
plt.title("Graph of Density vs Temeprature for " + filename)
plt.xlabel("Temperature")
plt.ylabel("Density")
plt.show()





# ex 5.a
# water

filename1= input("Enter file name") # dont forget .dat

file_w = "../dat/" + filename1

file_water=open(file_w,"r")

print(file_water)

# air 

filename2= input("Enter file name") # dont forget .dat

file_a = "../dat/" + filename2

file_air=open(file_a,"r")

print(file_air)

# files are opened

# use water

tabel=[]

for i in file_water:
    column=i.split()
    if len(column) == 0:
        continue
    elif column[0] == "#":
        continue
    temperature=float(column[0])
    density=float(column[1])
    tabel.append([temperature,density])
print("Your tabel is",tabel)
x=[i[0] for i in tabel]
y=[i[1] for i in tabel] 

print("Your temperatures are ",x)
print("Your densities are",y)
file_water.close()  # Don't forget to close the files
file_air.close()

# ex 5.b

import matplotlib.pyplot as plt # import the matplot library 
plt.scatter(x,y, c = "Blue" )
plt.title("Graph of Density vs Temeprature for " + filename1)
plt.xlabel("Temperature")
plt.ylabel("Density")

import numpy as np

# np. is a prefix used to access functions, methods, or attributes from the NumPy library.

x1 = np.array(x) # assign the values of x,y as temp and dens which are loaded from the previous exercise
y1 = np.array(y) # with these formula you create a new list which allow to perform mathematical derivations

coeff1 = np.polyfit(x1, y1, 1)
coeff2 = np.polyfit(x1,y1,2)

p1 = np.poly1d(coeff1)
print(p1)
p2= np.poly1d(coeff2)
print(p2)

y_fitted_1 = p1(x1) # Calculate the fitted values as indicated on the given code
y_fitted_2 = p2(y1)

plt.scatter(x1,y1,color = "blue")
plt.plot(x1,y_fitted_1, color = "red",linestyle = "-")
plt.plot(x1,y_fitted_2, color = "green", linestyle = "-")
plt.title('Density vs temperature for ' + filename1)
plt.legend(['data', 'fitted polynomial of degree 1', 'fitted polynomial of degree 2'])
plt.xlabel('Temperature in Celsius degrees')
plt.ylabel('Density in kg/m^3')
plt.show()





